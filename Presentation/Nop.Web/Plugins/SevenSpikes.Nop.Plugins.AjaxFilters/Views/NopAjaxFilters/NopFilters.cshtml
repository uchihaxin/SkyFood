@** Copyright 2014 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
    * http://www.nop-templates.com/t/licensinginfo
*@
@using SevenSpikes.Nop.Core.Helpers
@using Nop.Core;
@using Nop.Core.Infrastructure;

@model SevenSpikes.Nop.Plugins.AjaxFilters.Models.NopAjaxFiltersModel
@{
    string storeLocation = HttpContext.Current.Request.ApplicationPath;
    if (!storeLocation.EndsWith("/"))
    {
        storeLocation += "/";
    }
}
<script type="text/javascript">
    var nop_store_directory_root = "@(storeLocation)";
</script>
@{
    if (Model.NopAjaxFiltersSettingsModel.EnablePriceRangeFilter ||
        Model.NopAjaxFiltersSettingsModel.EnableAttributesFilter ||
        Model.NopAjaxFiltersSettingsModel.EnableSpecificationsFilter ||
        Model.NopAjaxFiltersSettingsModel.EnableManufacturersFilter ||
        Model.NopAjaxFiltersSettingsModel.EnableOnSaleFilter ||
        Model.NopAjaxFiltersSettingsModel.EnableVendorsFilter)
    {
        Html.AddScriptParts("~/Scripts/kendo/2014.1.318/kendo.core.min.js");
        Html.AddScriptParts("~/Scripts/kendo/2014.1.318/kendo.userevents.min.js");
        Html.AddScriptParts("~/Scripts/kendo/2014.1.318/kendo.draganddrop.min.js");
        Html.AddScriptParts("~/Scripts/kendo/2014.1.318/kendo.window.min.js");

        /*Kendo UI specific css files.

        kendo.common.min.css - it contains common kendo styles
        kendo.default.min.css - it contains deafult kendo theme specific styles. You can use the kendo theme builder for new themes - http://demos.kendoui.com/themebuilder/index.html

        */
        Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/Scripts/jquery.query-2.1.7.js");
        Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/Scripts/jquery.json-2.2.min.js");
        Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/JQueryTemplates/jDropDown.jquery.0.1.min.js");
        Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/Scripts/jquery.tmpl.min.js");
        Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/Scripts/jquery.address-1.5.min.js");
        Html.AddScriptParts("~/Plugins/SevenSpikes.Core/Scripts/SevenSpikesExtensions.js");
        Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/Scripts/Filters.min.js");
    }
    else
    {
        // no filters enabled, so simply return
        return;
    }


    MvcHtmlString priceRangeFilter = MvcHtmlString.Empty;
    MvcHtmlString specificationsFilter = MvcHtmlString.Empty;
    MvcHtmlString attributesFilter = MvcHtmlString.Empty;
    MvcHtmlString manufacturersFilter = MvcHtmlString.Empty;
    MvcHtmlString vendorsFilter = MvcHtmlString.Empty;
    MvcHtmlString onSaleFilter = MvcHtmlString.Empty;

    if (Model.NopAjaxFiltersSettingsModel.EnablePriceRangeFilter)
    {
        priceRangeFilter = Html.Action("GetPriceRangeFilter", "PriceRangeFilterSlider7Spikes");
    }

    if (Model.NopAjaxFiltersSettingsModel.EnableSpecificationsFilter)
    {
        specificationsFilter = Html.Action("GetSpecificationFilter", "SpecificationFilter7Spikes");
    }

    if (Model.NopAjaxFiltersSettingsModel.EnableAttributesFilter)
    {
        attributesFilter = Html.Action("GetProductAttributeFilter", "AttributeFilter7Spikes");
    }

    if (Model.NopAjaxFiltersSettingsModel.EnableManufacturersFilter)
    {
        manufacturersFilter = Html.Action("GetManufacturerFilter", "ManufacturerFilter7Spikes");
    }

    if (Model.NopAjaxFiltersSettingsModel.EnableVendorsFilter && Model.CategoryId > 0)
    {
        vendorsFilter = Html.Action("GetVendorFilter", "VendorFilter7Spikes");
    }
    else if (Model.NopAjaxFiltersSettingsModel.EnableVendorsFilter && Model.ManufacturerId > 0)
    {
        vendorsFilter = Html.Action("GetVendorFilterForManufacturer", "VendorFilter7Spikes");
    }

    if (Model.NopAjaxFiltersSettingsModel.EnableOnSaleFilter)
    {
        onSaleFilter = Html.Action("GetOnSaleFilter", "OnSaleFilter7Spikes");
    }

    bool noFilters = MvcHtmlString.IsNullOrEmpty(priceRangeFilter) && MvcHtmlString.IsNullOrEmpty(specificationsFilter)
        && MvcHtmlString.IsNullOrEmpty(attributesFilter) && MvcHtmlString.IsNullOrEmpty(manufacturersFilter);

    if (noFilters && @Model.NopAjaxFiltersSettingsModel.DisableDropdownNavigationWithAjaxWhenThereAreNoFilters)
    {
        return;
    }
    
    // Include css files only if there are products for filtering and at least one of the filter panel is visible
    var theme = Model.NopAjaxFiltersSettingsModel.Theme;

    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/Themes/" + theme + "/Content/AjaxFilters.css");

    var supportRtl = EngineContext.Current.Resolve<IWorkContext>().WorkingLanguage.Rtl;
    if (supportRtl)
    {
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/Themes/" + theme + "/Content/AjaxFilters.rtl.css");
    }

    Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/Scripts/FiltersQuery.min.js");

    var isMobileDevice = DeviceHelper.IsMobileDevice(EngineContext.Current.Resolve<HttpContextBase>().Request);
    var isScrollToElementEnabled = (isMobileDevice && Model.NopAjaxFiltersSettingsModel.ScrollToElementOnThePageAfterFiltrationMobile) ||
        (!isMobileDevice && Model.NopAjaxFiltersSettingsModel.ScrollToElementOnThePageAfterFiltration);
}

<div class="nopAjaxFilters7Spikes" data-categoryid="@Model.CategoryId" data-manufacturerid="@Model.ManufacturerId" data-vendorid="@Model.VendorId"
     data-isonsearchpage="@Model.SearchQueryStringParameters.IsOnSearchPage"
     data-searchkeyword="@Model.SearchQueryStringParameters.Keyword" data-searchcategoryid="@Model.SearchQueryStringParameters.SearchCategoryId"
     data-searchmanufacturerid="@Model.SearchQueryStringParameters.SearchManufacturerId" data-searchpricefrom="@Model.SearchQueryStringParameters.PriceFrom"
     data-searchpriceto="@Model.SearchQueryStringParameters.PriceTo" data-searchincludesubcategories="@Model.SearchQueryStringParameters.IncludeSubcategories"
     data-searchinproductdescriptions="@Model.SearchQueryStringParameters.SearchInProductDescriptions" data-searchadvancedsearch="@Model.SearchQueryStringParameters.AdvancedSearch"
     data-getfilteredproductsurl="@Url.RouteUrl("GetFilteredProducts")"
     data-productslistpanelselector="@Model.NopAjaxFiltersSettingsModel.ProductsListPanelSelector"
     data-productsgridpanelselector="@Model.NopAjaxFiltersSettingsModel.ProductsGridPanelSelector"
     data-pagerpanelselector="@Model.NopAjaxFiltersSettingsModel.PagerPanelSelector"
     data-sortoptionsdropdownselector="@Model.NopAjaxFiltersSettingsModel.SortOptionsDropDownSelector"
     data-viewoptionsdropdownselector="@Model.NopAjaxFiltersSettingsModel.ViewOptionsDropDownSelector"
     data-productspagesizedropdownselector="@Model.NopAjaxFiltersSettingsModel.ProductPageSizeDropDownSelector"
     data-filtersuimode="@Model.NopAjaxFiltersSettingsModel.FiltersUIMode.ToString().ToLower()"
     data-defaultviewmode="@Model.DefaultViewMode"
     data-defaultsortoption="@Model.DefaultProductSortOption"
     data-enableinfinitescroll="@Model.NopAjaxFiltersSettingsModel.EnableInfiniteScroll"
     data-infinitescrollloadertext="@T("SevenSpikes.NopAjaxFilters.Client.Common.LoadingMoreProducts")"
     data-scrolltoelement="@isScrollToElementEnabled"
     data-scrolltoelementselector="@Model.NopAjaxFiltersSettingsModel.ElementToScrollAfterFiltrationSelector"
     data-showselectedfilterspanel="@Model.NopAjaxFiltersSettingsModel.ShowSelectedFiltersPanel">
    @if (!noFilters)
    {
        <div class="filtersTitlePanel">
            <p class="filtersTitle">@T("SevenSpikes.NopAjaxFilters.Client.Common.FilterBy"):</p>
            <a class="clearFilterOptionsAll">@T("SevenSpikes.NopAjaxFilters.Client.Common.ClearAll")</a>
        </div>
        <div class="filtersPanel">
            <div class="block filter-block selected-options" style="display: none;">
                <div class="title">
                    <a class="toggleControl">@T("SevenSpikes.NopAjaxFilters.SelectedOptions.PanelTitle")</a>
                </div>
                <div class="filtersGroupPanel">
                    <ul class="selected-options-list"></ul>
                </div>
            </div>

            @priceRangeFilter
            @onSaleFilter
            @specificationsFilter
            @attributesFilter
            @manufacturersFilter
            @vendorsFilter
        </div>
    }
</div>

@Html.Hidden("availableSortOptionsJson", Model.AvailableSortOptionsJson)
@Html.Hidden("availableViewModesJson", Model.AvailableViewModesJson)
@Html.Hidden("availablePageSizesJson", Model.AvailablePageSizesJson)